<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.test.entity.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="join_date" jdbcType="DATE" property="joinDate" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
  </resultMap>

  <sql id="Base_Column_List">
    id, name, sex, birthday, join_date, number, department_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!--分页查询  -->
  <select id="selectAllByPage" resultType="java.util.HashMap">
   select  employee.id, employee.name, employee.sex, employee.birthday, employee.join_date, employee.number, department.dname
    from employee,department where employee.department_id = department.id  limit #{start},#{rows}
  </select>
  
  <!--根据员工查询 -->
  <select id="selectEployeeByName" parameterType="com.test.entity.Employee" resultType="java.util.HashMap">
   select  employee.id, employee.name, employee.sex, employee.birthday, employee.join_date, employee.number, department.dname
    from employee,department where employee.department_id = department.id 
    <if test ="name != null">
     and employee.name = #{name} 
    </if> 
    <if test="departmentId != null">
    AND	employee.department_id = #{departmentId}
    </if>
    <if test="number != null">
    AND	employee.number = #{number}
    </if>
  </select>
  
  <!-- 查询部门下的员工 -->
  <select id="selectAllByDeptId" resultMap="BaseResultMap">
   select 
    <include refid="Base_Column_List" />
    from employee 
    where department_id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap">
   select 
    <include refid="Base_Column_List" />
    from employee 
  </select>
  
  <!-- 查询记录总数 -->
  <select id="selectRecordCount" resultType="INTEGER">
  	select count(*) from employee
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.test.entity.Employee">
    insert into employee (id, name, sex, 
      birthday, join_date, number, 
      department_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=VARCHAR}, #{joinDate,jdbcType=DATE}, #{number,jdbcType=VARCHAR}, 
      #{departmentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.test.entity.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="joinDate != null">
        join_date,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="joinDate != null">
        #{joinDate,jdbcType=DATE},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.entity.Employee">
    update employee
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="joinDate != null">
        join_date = #{joinDate,jdbcType=DATE},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.entity.Employee">
    update employee
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      join_date = #{joinDate,jdbcType=DATE},
      number = #{number,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>